name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-latest:
    name: xcodebuild (16)
    runs-on: macos-15
    strategy:
      matrix:
        command: [test, '']
        platform: [IOS, MACOS]
        xcode: ['16.0']
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}      
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: List available devices
        run: xcrun simctl list devices available
      - name: Cache derived data
        uses: actions/cache@v3
        with:
          path: |
            ~/.derivedData
          key: |
            deriveddata-xcodebuild-${{ matrix.platform }}-${{ matrix.xcode }}-${{ matrix.command }}-${{ hashFiles('**/Sources/**/*.swift, '**/Tests/**/*.swift') }}
          restore-keys: |
            deriveddata-xcodebuild-${{ matrix.platform }}-${{ matrix.xcode }}-${{ matrix.command }}-
      - name: Update mtime for incremental builds
        uses: chetan/git-restore-mtime-actions@v2
      - name: Debug
        run: make XCODEBUILD_ARGUMENT="${{ matrix.command }}" CONFIG=Debug PLATFORM="${{ matrix.platform }}" WORKSPACE=.github/package.xcworkspace xcodebuild
  build:
    name: xcodebuild (15)
    runs-on: macos-14
    strategy:
      matrix:
        command: [test, '']
        platform: [IOS, MAC_CATALYST, MACOS, TVOS, VISIONOS, WATCHOS]
        xcode: [15.2, 15.4]
        exclude:
          - {xcode: 15.2, command: test}
          - {xcode: 15.4, comamnd: ''}
          - {xcode: 15.2, platform: MAC_CATALYST}
          - {xcode: 15.2, platform: TVOS}
          - {xcode: 15.2, platform: VISIONOS}
          - {xcode: 15.2, platform: WATCHOS}
        include:
          - {xcode: 15.2, skip_release: 1}
  
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select ${{ matrix.xcode }}
      - name: Install visionOS runtime
        if: matrix.platform == 'visionOS'
        run: |
          sudo xcodebuild -runFirstLaunch
          sudo xcrun simctl list
          sudo xcodebuild -downloadPlatform visionOS
          sudo xcodebuild -runFirstLaunch
      - name: List available devices
        run: xcrun simctl list devices available 
      - name: Cache derived data
        uses: actions/cache@v3
        with:
          path: |
            ~/.derivedData
          key: |
            deriveddata-xcodebuild-${{ matrix.platform }}-${{ matrix.xcode }}-${{ matrix.command }}-${{ hashFiles('**/Sources/**/*.swift, '**/Tests/**/*.swift') }}
          restore-keys: |
            deriveddata-xcodebuild-${{ matrix.platform }}-${{ matrix.xcode }}-${{ matrix.command }}-
      - name: Set IgnoreFileSystemDeviceInodeChanges flag
        run: defaults write com.apple.dt.XCBuild IgnoreFileSystemDeviceInodeChanges -bool YES
      - name: Update mtime for incremental builds
        uses: chetan/git-restore-mtime-action@v2
      - name: Debug
        run: make XCODEBUILD_ARGUMENT="${{ matrix.command }}" CONFIG=Debug PLATFORM="${{ matrix.platform }}" WORKSPACE=.github/package.xcworkspace xcodebuild
      - name: Release
        if: matrix.skip_release != '1'
        run: make XCODEBUILD_ARGUMENT="${{ matrix.command }}" CONFIG=Release PLATFORM="${{ matrix.platform }}" WORKSPACE=.github/package.xcworkspace xcodebuild
